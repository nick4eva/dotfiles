if [[ -n "$ZSH_DEBUGRC" ]]; then
  zmodload zsh/zprof
fi

# vim: foldmethod=marker
# Oh-My-Zsh {{{1
export ZSH="${HOME}/.oh-my-zsh"

plugins=(
    aws
    colored-man-pages
    docker
    # fast-syntax-highlighting
    git
    helm
    #kubectl
    terraform
    # vi-mode
    you-should-use
    zsh-autosuggestions
    zsh-completions
    autoupdate
    asdf
    # fzf-tab # fzf-tab should be the last plugin to bind "^I"
)

# Settings that must be applid before loading Oh-My-Zsh {{{2

# Use case-sensitive completion
CASE_SENSITIVE="true"

# Fix slow paste
DISABLE_MAGIC_FUNCTIONS=true

# }}}

# Load oh-my-zsh
source "${ZSH}/oh-my-zsh.sh"
# configure oh-my-zsh plugins
export YSU_HARDCORE=1

# ZSH {{{1

# Apply sensisble zsh settings
source $HOME/dotfiles/zsh/zshopt

# Bind C+Space to accept the current suggestion
bindkey '^ ' autosuggest-accept

# Set the default umask
umask 022

# OSTYPE specific settings
case "${OSTYPE}" in
    linux*)
        if (( $+commands[setxkbmap] )); then
            setxkbmap -option caps:escape_shifted_capslock
            setxkbmap -option altwin:swap_lalt_lwin
        fi
        ;;
    *) ;;
esac

# Source files {{{2
# Load aliases
source $HOME/dotfiles/zsh/aliases.zsh

# Load functions
source $HOME/dotfiles/zsh/functions.zsh

# Apply FZF configuration
source $HOME/dotfiles/zsh/fzf.zsh

# Apply autoupdate configuration
source $HOME/dotfiles/zsh/autoupdate.zsh

# Load any extra settings
test -f $HOME/dotfiles/zsh/extras && source $HOME/dotfiles/zsh/extras

# Completion {{{2

# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'

# Only display targets tag for make command completion
zstyle ':completion:*:*:make::' tag-order 'targets variables'

# give a preview of commandline arguments when completing `kill`
zstyle ':completion:*:*:*:*:processes' command "ps -u $USER -o pid,user,comm -w -w"

# Reload the completions (uncomment if zsh-completions don't work)
# autoload -U compinit && compinit
eval "$(devbox global shellenv --init-hook)"
eval "$(navi widget zsh)"
eval "$(starship init zsh)"
eval "$(atuin init zsh)"
eval "$(zoxide init zsh)"

if [[ -n "$ZSH_DEBUGRC" ]]; then
  zprof
fi
